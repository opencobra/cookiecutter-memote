#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2017 Novo Nordisk Foundation Center for Biosustainability,
# Technical University of Denmark.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
`git` pre-commit hook that adds a YAML representation of the SBML model to the
commit if the model changed at all.
"""

from __future__ import absolute_import

import logging
import os.path as osp
from six.moves import configparser
from subprocess import check_output

from cobra.io import read_sbml_model, save_yaml_model

LOGGER = logging.getLogger(__name__)
config = configparser.ConfigParser()
config.read('memote.ini')
MEMOTE_MODEL = osp.basename(config["memote"]["model"])


def add_yaml(sbml_path, yaml_path):
    LOGGER.info("Reading SBML '%s'.", sbml_path)
    model = read_sbml_model(sbml_path)
    LOGGER.info("Writing YAML '%s'.", yaml_path)
    save_yaml_model(model, yaml_path, sort=True)
    # Use subprocess rather than gitpython because gitpython cannot get a lock
    # on the git DB and thus raises an exception.
    check_output(["git", "add", yaml_path])


def main():
    in_path = MEMOTE_MODEL
    if not osp.exists(in_path):
        LOGGER.info("Model '%s' not found, skipping YAML addition.", in_path)
        return
    out_path = osp.splitext(MEMOTE_MODEL)[0] + ".yml"
    add_yaml(in_path, out_path)


if __name__ == "__main__":
    logging.basicConfig(
        level="INFO", format="pre-commit: %(levelname)s - %(message)s")
    main()
